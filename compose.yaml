services:
  athlete_db:
    image: postgres:latest
    container_name: athlete_db
    environment:
      PGPORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: athlete_db
    ports:
      - "5432:5432"
    volumes:
      - athlete_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "athlete_db", "-h", "localhost", "-p", "5432"]
      interval: 5s
      timeout: 50s
    networks:
        - default

  application_db:
    image: postgres:latest
    container_name: application_db
    environment:
      PGPORT: 5433
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: application_db
    ports:
      - "5433:5433"
    volumes:
      - application_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "application_db", "-h", "localhost", "-p", "5433"]
      interval: 5s
      timeout: 50s
    networks:
        - default

  event_db:
    image: postgres:latest
    container_name: event_db
    environment:
      PGPORT: 5434
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: event_db
    ports:
      - "5434:5434"
    volumes:
      - event_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "event_db", "-h", "localhost", "-p", "5434"] 
      interval: 5s
      timeout: 50s
    networks:
        - default

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "root"
      RABBITMQ_DEFAULT_PASS: "toor"
    networks:
      - default
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 3

  application_handling:
    container_name: application_handling
    volumes:
      - ./application_handling:/app
    build:
      context: ./application_handling
    networks:
      - default
    depends_on:
      rabbitmq:
        condition: service_healthy
      application_db:
        condition: service_healthy
    ports:
      - "8002:8002"

  athlete_handling:
    container_name: athlete_handling
    volumes:
      - ./athlete_handling:/app
    build:
      context: ./athlete_handling
    networks:
      - default
    depends_on:
      rabbitmq:
        condition: service_healthy
      athlete_db:
        condition: service_healthy
    ports:
      - "8003:8003"

  event_handling:
    container_name: event_handling
    volumes:
      - ./event_handling:/app
    build:
      context: ./event_handling
    networks:
      - default
    depends_on:
      rabbitmq:
        condition: service_healthy
      event_db:
        condition: service_healthy
    ports:
      - "8004:8004"

volumes:
  athlete_pgdata:
  application_pgdata:
  event_pgdata:

networks:
  default:
    driver: bridge

